{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-8b90f0369ee3c92b7df87fa75617bcf3",
            "file": "src/app/store/app.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { booksReducer } from \"../books/state/books.reducer\";\r\nimport { BooksState } from \"../books/state/books.state\";\r\nimport { counterReducer } from \"../counter/state/counter.reducer\";\r\nimport { CounterState } from \"../counter/state/counter.state\";\r\nimport { UserReducer } from \"../newuser/state/newuser.reducer\";\r\n\r\nexport interface AppState{\r\n    counter: CounterState;\r\n    books: BooksState\r\n}\r\n\r\n\r\nexport const appReducer = {\r\n    counter: counterReducer,\r\n    books: booksReducer,\r\n    user: UserReducer\r\n}",
            "properties": [
                {
                    "name": "books",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BooksState",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "counter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CounterState",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "Books",
            "id": "interface-Books-73235dff7e61f43c1a1d237dc133a9ee",
            "file": "src/app/shared/header/models/books.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Books{\r\n    id?: string,\r\n    title: string,\r\n    description: string\r\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "BooksState",
            "id": "interface-BooksState-30ac4e2e6f63eb180e5ef191fb8446f9",
            "file": "src/app/books/state/books.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Books } from \"src/app/shared/header/models/books.model\";\r\n\r\nexport interface BooksState {\r\n    books : Books[];\r\n}\r\n\r\n\r\nexport const initialState: BooksState = {\r\n    books: [],\r\n}",
            "properties": [
                {
                    "name": "books",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Books[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "CounterState",
            "id": "interface-CounterState-7797beb3509378cad512ae27697c179d",
            "file": "src/app/counter/state/counter.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CounterState{\r\n    counter : number;\r\n    channelName: string\r\n}\r\n\r\nexport const initialState: CounterState = {\r\n    counter: 4,\r\n    channelName:'Test Channel'\r\n}",
            "properties": [
                {
                    "name": "channelName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "counter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "UserRegister",
            "id": "interface-UserRegister-9899f85dd1e64aca61fc9a3fcb6aadbe",
            "file": "src/app/shared/header/models/register.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserRegister{\r\n    fName: string,\r\n    lName: string,\r\n    email: string,\r\n    password: string,\r\n    userType: string\r\n}",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "fName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "lName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "userType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        },
        {
            "name": "UserState",
            "id": "interface-UserState-21a9314cf2af30fa4f812812853777c2",
            "file": "src/app/newuser/state/newuser.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UserRegister } from \"src/app/shared/header/models/register.model\";\r\n\r\n\r\nexport interface UserState {\r\n    user : UserRegister[];\r\n}\r\n\r\n\r\nexport const initialState: UserState = {\r\n    user: [],\r\n}",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserRegister[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 163,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "BooksEffects",
            "id": "injectable-BooksEffects-c66f0e77935a0a5e21d3646e4492cbad",
            "file": "src/app/books/state/books.effects.ts",
            "properties": [
                {
                    "name": "addBooks$",
                    "defaultValue": "createEffect(()=>{\r\n      return  this.action$.pipe(ofType(addbooks), \r\n        mergeMap(action=>{\r\n            return this.booksService.addBooks(action.book).pipe(\r\n                map(data=>{\r\n                    const book = {...action.book, id: data.name};\r\n                    return addBooksSuccess({book});\r\n                })\r\n            )\r\n        }))\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "deletePost$",
                    "defaultValue": "createEffect(()=>{\r\n        return this.action$.pipe(\r\n            ofType(deleteBook),\r\n            switchMap((action)=>{\r\n                return this.booksService.deleteBook(action.id).pipe(\r\n                    map((data)=>{\r\n                        return deleteBookSucces({ id: action.id});\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "loadBooks$",
                    "defaultValue": "createEffect(()=>{\r\n        return this.action$.pipe(\r\n            ofType(loadBooks),\r\n            mergeMap((action)=>{\r\n                return this.booksService.getBooks().pipe(\r\n                    map((books)=>{\r\n                        return loadBookSuccess({books});\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "updateBook$",
                    "defaultValue": "createEffect(()=>{\r\n        return this.action$.pipe(\r\n            ofType(updateBook),\r\n            switchMap((action)=>{\r\n                return this.booksService.updatePost(action.book).pipe(\r\n                    map((data)=>{\r\n                        return updateBookSuccess({ book: action.book})\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { addbooks, addBooksSuccess, deleteBook, deleteBookSucces, loadBooks, loadBookSuccess, updateBook, updateBookSuccess } from \"src/app/books/state/books.actions\";\r\nimport { BooksService } from \"src/app/services/books.service\";\r\nimport { map, mergeMap, switchMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class BooksEffects{\r\n\r\n    constructor(private action$:Actions, private booksService: BooksService){\r\n    }\r\n\r\n    loadBooks$ = createEffect(()=>{\r\n        return this.action$.pipe(\r\n            ofType(loadBooks),\r\n            mergeMap((action)=>{\r\n                return this.booksService.getBooks().pipe(\r\n                    map((books)=>{\r\n                        return loadBookSuccess({books});\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    addBooks$ = createEffect(()=>{\r\n      return  this.action$.pipe(ofType(addbooks), \r\n        mergeMap(action=>{\r\n            return this.booksService.addBooks(action.book).pipe(\r\n                map(data=>{\r\n                    const book = {...action.book, id: data.name};\r\n                    return addBooksSuccess({book});\r\n                })\r\n            )\r\n        }))\r\n    })\r\n\r\n    updateBook$ = createEffect(()=>{\r\n        return this.action$.pipe(\r\n            ofType(updateBook),\r\n            switchMap((action)=>{\r\n                return this.booksService.updatePost(action.book).pipe(\r\n                    map((data)=>{\r\n                        return updateBookSuccess({ book: action.book})\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n\r\n    deletePost$ = createEffect(()=>{\r\n        return this.action$.pipe(\r\n            ofType(deleteBook),\r\n            switchMap((action)=>{\r\n                return this.booksService.deleteBook(action.id).pipe(\r\n                    map((data)=>{\r\n                        return deleteBookSucces({ id: action.id});\r\n                    })\r\n                )\r\n            })\r\n        )\r\n    })\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "action$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "booksService",
                        "type": "BooksService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "action$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "booksService",
                        "type": "BooksService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "BooksService",
            "id": "injectable-BooksService-692e05575053b1e33cdeb9a6208e7279",
            "file": "src/app/services/books.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addBooks",
                    "args": [
                        {
                            "name": "book",
                            "type": "Books",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "book",
                            "type": "Books",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteBook",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBooks",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Books[]>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatePost",
                    "args": [
                        {
                            "name": "book",
                            "type": "Books",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "book",
                            "type": "Books",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Books } from '../shared/header/models/books.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n\n  constructor(private http: HttpClient) { }\n\n  getBooks(): Observable<Books[]>{\n    return this.http.get<Books[]>(`http://localhost:3000/books`)\n    .pipe(map((data)=>{\n      const books: Books[] = [];\n     for(let key in data){\n       books.push({...data[key], id: key})\n     }\n      return books;\n    }));\n  }\n\n  addBooks(book : Books): Observable<{ name: string}>{\n    return this.http.post<{name : string}>(`http://localhost:3000/books`,book)\n  }\n\n  updatePost(book: Books){\n    \n    // const bookData = {\n    //   [book.id]: { title: book.title, description: book.description },\n    // };\n    return this.http.patch(`http://localhost:3000/books`,book)\n  }\n\n  deleteBook(id : string){\n    return this.http.delete(`http://localhost:3000/books/${id}.json`)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LoginService",
            "id": "injectable-LoginService-cfd20c0925214336b933b34ad45a3df6",
            "file": "src/app/services/login.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private http: HttpClient) { }\n\n  login(email: string, password: string) {\n\n    return this.http.get(`http://localhost:3000/register`);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "NewUserEffects",
            "id": "injectable-NewUserEffects-286c7274b54d5405b33f355ec1db5972",
            "file": "src/app/newuser/state/newuser.effects.ts",
            "properties": [
                {
                    "name": "addUser$",
                    "defaultValue": "createEffect(()=>{\r\n      return  this.action$.pipe(ofType(addUser), \r\n        mergeMap(action=>{\r\n            return this.userService.addUser(action.user).pipe(\r\n                map(data=>{\r\n                    const user = {...action.user, id: data.name};\r\n                    return addUserSuccess({user});\r\n                })\r\n            )\r\n        }))\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { map, mergeMap} from 'rxjs/operators';\r\nimport { RegisterUserService } from \"src/app/services/register-user.service\";\r\nimport { addUser, addUserSuccess } from \"./newuser.actions\";\r\n\r\n@Injectable()\r\nexport class NewUserEffects{\r\n\r\n    constructor(private action$:Actions, private userService: RegisterUserService){\r\n    }\r\n    \r\n    addUser$ = createEffect(()=>{\r\n      return  this.action$.pipe(ofType(addUser), \r\n        mergeMap(action=>{\r\n            return this.userService.addUser(action.user).pipe(\r\n                map(data=>{\r\n                    const user = {...action.user, id: data.name};\r\n                    return addUserSuccess({user});\r\n                })\r\n            )\r\n        }))\r\n    })\r\n\r\n   \r\n\r\n    \r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "action$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "RegisterUserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "action$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "RegisterUserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RegisterUserService",
            "id": "injectable-RegisterUserService-094cae565bb70d00e5d16ac5e798bb06",
            "file": "src/app/services/register-user.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "UserRegister",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "UserRegister",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserRegister } from '../shared/header/models/register.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterUserService {\n\n  constructor(private http: HttpClient) { }\n\n  addUser(user: UserRegister): Observable<{ name: string}>{\n    return this.http.post<{name : string}>(`http://localhost:3000/register`,user)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AddbooksComponent",
            "id": "component-AddbooksComponent-5981064f723cf24aee43f7245e058578",
            "file": "src/app/books/addbooks/addbooks.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-addbooks",
            "styleUrls": [
                "./addbooks.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./addbooks.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "booksForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAddbooks",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Books } from 'src/app/shared/header/models/books.model';\nimport { AppState } from 'src/app/store/app.state';\nimport { addbooks } from '../state/books.actions';\n\n\n@Component({\n  selector: 'app-addbooks',\n  templateUrl: './addbooks.component.html',\n  styleUrls: ['./addbooks.component.scss']\n})\nexport class AddbooksComponent implements OnInit {\n\n  booksForm: FormGroup;\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit(): void {\n    this.booksForm = new FormGroup({\n      title: new FormControl(null,\n        [Validators.required ]),\n\n      description: new FormControl(null,[Validators.required])\n    })\n  }\n\n  onAddbooks(){\n    if(!this.booksForm.valid){\n      return;\n    }\n    const book : Books ={\n      title: this.booksForm.value.title,\n      description: this.booksForm.value.description\n    };\n\n   this.store.dispatch(addbooks({book}))\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\r\n    margin-top: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    .error {\r\n        font-size: 15px;\r\n     }\r\n    \r\n     .error-msg{\r\n        color: red;\r\n        font-size: 12px;\r\n    }\r\n    div{\r\n        margin-bottom: 10px;\r\n    }\r\n    button{\r\n        background-color: var(--secondary);\r\n        padding: 5px 5px 5px 5px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n    }\r\n    form{\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        input{\r\n            padding: 6px 0px 6px 5px;\r\n            margin-top: 5px;\r\n            border-radius: 3px solid rgb(230, 215, 215);\r\n        }\r\n        textarea{\r\n            padding: 6px 0px 6px 5px;\r\n            margin-top: 5px;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./addbooks.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n    <div class=\"addForm\">\n        <form [formGroup]=\"booksForm\" (ngSubmit)=\"onAddbooks()\">\n            <div class=\"title\">\n                    <label for=\"fname\">Title</label> <br>\n                    <input type=\"text\" id=\"fname\" placeholder=\"book title\" formControlName=\"title\">\n                    <div *ngIf=\"booksForm.controls['title'].errors && booksForm.controls['title'].touched\"\n                    class=\"error-msg\">\n                    <div class=\"error\" [hidden]=\"!booksForm.controls['title'].errors.required\">please enter book title</div>\n                    <div class=\"error\" [hidden]=\"!booksForm.controls['title'].errors.minLength\">please enter minimum 6 char</div>\n                    </div> \n            </div>\n            <div class=\"description\">\n                <label for=\"lname\">Description</label> <span class=\"mandetory\">*</span><br>\n                <textarea rows=\"4\" cols=\"30\" placeholder=\"book description here\" formControlName=\"description\"></textarea>\n                <div *ngIf=\"booksForm.controls['description'].errors && booksForm.controls['description'].touched\"\n                    class=\"error-msg\">\n                    <div class=\"error\" [hidden]=\"!booksForm.controls['description'].errors.required\">please enter book Description</div>\n                </div> \n            </div>\n            <div class=\"submit\">\n                <button type=\"submit\" [disabled]=\"!booksForm.valid\">Submit</button>\n            </div>\n        </form>\n    </div>\n</div>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-3ee43f991e8065b53ca10a6ac7f7d8c8",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'training'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'training';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- <app-header></app-header> -->\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "BooksComponent",
            "id": "component-BooksComponent-955bcda8c28778ae9da0bb63ac42cf1d",
            "file": "src/app/books/books/books.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-books",
            "styleUrls": [
                "./books.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./books.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Books",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Books[]>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "edit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "editBook",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDeleteBook",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Books } from 'src/app/shared/header/models/books.model';\nimport { AppState } from 'src/app/store/app.state';\nimport { deleteBook, loadBooks} from '../state/books.actions';\nimport { getBooks } from '../state/books.selector';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.scss']\n})\nexport class BooksComponent implements OnInit {\n\n  edit: boolean = false;\n  Books: Observable<Books[]>;\n  constructor(private store: Store<AppState>) { }\n\n  ngOnInit(): void {\n    this.Books = this.store.select(getBooks);\n    this.store.dispatch(loadBooks());\n  }\n\n  editBook(){\n    this.edit = true;\n  }\n  onDeleteBook(id: any){\n    if(confirm('Are you sure you want to delete')){\n      this.store.dispatch(deleteBook({ id }));\n      console.log(\"delete the post \");\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".heading{\r\n        display: flex;\r\n        justify-content: center;\r\n        \r\n}\r\n.container1 {\r\n    max-width: 1000px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n\r\n    ul{\r\n        padding-inline-start: 0px;\r\n    }\r\n    .responsive-table {\r\n        li {\r\n          border-radius: 3px;\r\n          padding: 15px 30px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          margin-bottom: 18px;\r\n        }\r\n        .table-header {\r\n          background-color: #95A5A6;\r\n          font-size: 14px;\r\n          text-transform: uppercase;\r\n          letter-spacing: 0.03em;\r\n        }\r\n        .table-row {\r\n          background-color: #ffffff;\r\n          box-shadow: 0px 0px 9px 0px rgba(0,0,0,0.1);\r\n          button{\r\n              margin-left: 2px;\r\n              padding: 5px;\r\n            background-color: var(--secondary);\r\n\r\n          }\r\n        }\r\n        .col-1 {\r\n          flex-basis: 10%;\r\n        }\r\n        .col-2 {\r\n          flex-basis: 40%;\r\n        }\r\n        .col-3 {\r\n          flex-basis: 25%;\r\n        }\r\n        .col-4 {\r\n          flex-basis: 25%;\r\n        }\r\n        \r\n        @media all and (max-width: 767px) {\r\n          .table-header {\r\n            display: none;\r\n          }\r\n          li {\r\n            display: block;\r\n          }\r\n          .col {\r\n            \r\n            flex-basis: 100%;\r\n            \r\n          }\r\n          \r\n          .col {\r\n            display: flex;\r\n            padding: 10px 0;\r\n            &:before {\r\n              color: #6C7A89;\r\n              padding-right: 10px;\r\n              content: attr(data-label);\r\n              flex-basis: 50%;\r\n              text-align: right;\r\n            }\r\n          }\r\n        }\r\n      }\r\n  }",
                    "styleUrl": "./books.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"heading\">\n    <h2>Book's Data</h2>\n</div>\n<div class=\"container1\">\n    <ul class=\"responsive-table\">\n      <li class=\"table-header\">\n        <div class=\"col col-1\">book id</div>\n        <div class=\"col col-2\">book Title</div>\n        <div class=\"col col-3\">Description</div>\n        <div class=\"col col-4\">Action</div>\n      </li>\n      <li class=\"table-row\" *ngFor=\"let book of Books | async\">\n        <div class=\"col col-1\" data-label=\"book id\">{{book.id}}</div>\n        <div class=\"col col-2\" data-label=\"book Title\">{{book.title}}</div>\n        <div class=\"col col-3\" data-label=\"Description\">{{book.description}}</div>\n        <div class=\"col col-4\" data-label=\"Action\"><a [routerLink]=\"['edit',book.id]\" (click)=\"editBook()\"><button>Update</button> \n            <button class=\"delete\" (click)=\"onDeleteBook(book.id)\">delete</button></a></div>\n      </li>\n    </ul>\n  </div>\n\n\n<div *ngIf=\"edit\">\n    <router-outlet></router-outlet>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 317,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 78,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-b9e24006426ac77489081d7394a0b9a5-1",
            "file": "src/app/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [
                "\n    button{\n        color:red;\n\n    }\n     "
            ],
            "template": "<Button (click)=\"handleBtnClick()>ClickMe</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "'😄'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "btnClicked",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  template: `\r\n <Button (click)=\"handleBtnClick()>ClickMe</button>\r\n`,\r\n  styles: [\r\n    `\r\n    button{\r\n        color:red;\r\n\r\n    }\r\n     `\r\n  ]\r\n})\r\nexport class ButtonComponent {\r\n  @Input('title') title;\r\n  @Input('subtitle') subtitle;\r\n  @Input('content') content = '😄';\r\n  @Output() btnClicked = new EventEmitter<boolean>();\r\n  constructor() {}\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    button{\n        color:red;\n\n    }\n     \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-255893c3f81913904554ecad772c40c1",
            "file": "src/app/stories/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card",
            "styleUrls": [],
            "styles": [
                "\n    :host {\n      text-align: center;\n      background: white;\n      display: block;\n      padding: .45rem .65rem;\n      border-radius: 3px;\n      max-width: 325px;\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n    }\nh2 {\n  color: #c85f7f;\n}\n\np {\n  text-align: center;\n}  "
            ],
            "template": "  <h1>{{ title }}</h1>\n<h2>{{ subtitle }}</h2>\n\n<hr *ngIf=\"title || subtitle\">\n\n<p>{{ content }}</p>\n\n<button (click)=\"handleBtnClick()\">Click me!</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "defaultValue": "'😄'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string"
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "any"
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "btnClicked",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  template: `\r\n  <h1>{{ title }}</h1>\r\n<h2>{{ subtitle }}</h2>\r\n\r\n<hr *ngIf=\"title || subtitle\">\r\n\r\n<p>{{ content }}</p>\r\n\r\n<button (click)=\"handleBtnClick()\">Click me!</button>\r\n`,\r\n  styles: [\r\n    `\r\n    :host {\r\n      text-align: center;\r\n      background: white;\r\n      display: block;\r\n      padding: .45rem .65rem;\r\n      border-radius: 3px;\r\n      max-width: 325px;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n    }\r\nh2 {\r\n  color: #c85f7f;\r\n}\r\n\r\np {\r\n  text-align: center;\r\n}  `\r\n  ]\r\n})\r\nexport class CardComponent {\r\n  @Input('title') title;\r\n  @Input('subtitle') subtitle;\r\n  @Input('content') content = '😄';\r\n  @Output() btnClicked = new EventEmitter<boolean>();\r\n  constructor() {}\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host {\n      text-align: center;\n      background: white;\n      display: block;\n      padding: .45rem .65rem;\n      border-radius: 3px;\n      max-width: 325px;\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n    }\nh2 {\n  color: #c85f7f;\n}\n\np {\n  text-align: center;\n}  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 39
            }
        },
        {
            "name": "CounterButtonsComponent",
            "id": "component-CounterButtonsComponent-7b38ee678d41f492007ae2743b458a33",
            "file": "src/app/counter/counter-buttons/counter-buttons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-counter-buttons",
            "styleUrls": [
                "./counter-buttons.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./counter-buttons.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDecrement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onIncrement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { decrement, increment, reset } from '../state/counter.actions';\nimport { CounterState } from '../state/counter.state';\n\n@Component({\n  selector: 'app-counter-buttons',\n  templateUrl: './counter-buttons.component.html',\n  styleUrls: ['./counter-buttons.component.scss']\n})\nexport class CounterButtonsComponent implements OnInit {\n\n  constructor( private store: Store<{counter: CounterState}>) { }\n\n  ngOnInit(): void {\n  }\n\n  onIncrement(){\n    this.store.dispatch(increment());\n  }\n  onDecrement(){\n    this.store.dispatch(decrement());\n  }\n  onReset(){\n    this.store.dispatch(reset());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\r\n    display: flex;\r\n    justify-content: center;\r\n    .buttons{\r\n        display: flex; \r\n        button{\r\n            margin-left: 6px;\r\n            padding: 8px;\r\n            border-radius: 2px;\r\n            border: none;\r\n        }\r\n        .increment{\r\n            background-color: var(--secondary);\r\n        }\r\n        .decrement{\r\n            background-color: var(--secondary);\r\n        }\r\n        .reset{\r\n            background-color: var(--secondary);\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./counter-buttons.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n    <div class=\"buttons\">\n        <button (click)=\"onIncrement()\" class=\"increment\">Increment</button> \n        <button (click)=\"onDecrement()\" class=\"decrement\">Decrement</button> \n        <button (click)=\"onReset()\" class=\"reset\">Reset</button>\n    </div>    \n</div>"
        },
        {
            "name": "CounterComponent",
            "id": "component-CounterComponent-d2b1cb6a9eb364452b489480f3552f70",
            "file": "src/app/counter/counter/counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-counter",
            "styleUrls": [
                "./counter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./counter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  templateUrl: './counter.component.html',\n  styleUrls: ['./counter.component.scss']\n})\nexport class CounterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./counter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<app-counter-output></app-counter-output>\n<app-counter-buttons></app-counter-buttons>\n<app-custom-counter-input></app-custom-counter-input>"
        },
        {
            "name": "CounterOutputComponent",
            "id": "component-CounterOutputComponent-52d6731a9c63622c529e34dba889d15c",
            "file": "src/app/counter/counter-output/counter-output.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-counter-output",
            "styleUrls": [
                "./counter-output.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./counter-output.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "counter$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { AppState } from 'src/app/store/app.state';\nimport { getCounter } from '../state/counter.selectors';\nimport { CounterState } from '../state/counter.state';\n\n@Component({\n  selector: 'app-counter-output',\n  templateUrl: './counter-output.component.html',\n  styleUrls: ['./counter-output.component.scss']\n})\nexport class CounterOutputComponent implements OnInit {\n\n  counter$: Observable<number>;\n  \n  constructor(private store:Store<AppState>) { }\n\n  ngOnInit(): void {\n    \n    this.counter$ = this.store.select(getCounter);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\r\n    display: flex;\r\n    justify-content: center;\r\n}",
                    "styleUrl": "./counter-output.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n    <h3>counter is: {{ (counter$ | async)}}</h3>\n\n    <!-- <h3>Counter is {{ (counter$ | async)!.counter}}</h3> -->\n</div>"
        },
        {
            "name": "CustomCounterInputComponent",
            "id": "component-CustomCounterInputComponent-81a8e1528a1edbfc8e07d044779fbccb",
            "file": "src/app/counter/custom-counter-input/custom-counter-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-counter-input",
            "styleUrls": [
                "./custom-counter-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-counter-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "channelName$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "changeText",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/app/store/app.state';\nimport { customIncrement, onchangeChangeChannel } from '../state/counter.actions';\nimport { getChannel } from '../state/counter.selectors';\nimport { CounterState } from '../state/counter.state';\n\n@Component({\n  selector: 'app-custom-counter-input',\n  templateUrl: './custom-counter-input.component.html',\n  styleUrls: ['./custom-counter-input.component.scss']\n})\nexport class CustomCounterInputComponent implements OnInit {\n\n  value:number ;\n  channelName$: Observable<string>;\n  constructor(private store:Store<AppState>) { }\n\n  ngOnInit(): void {\n    this.channelName$ = this.store.select(getChannel);\n  }\n\n  onAdd(){\n    console.log(this.value);\n    this.store.dispatch(customIncrement({value: +this.value}))\n  }\n\n  changeText(){\n    this.store.dispatch(onchangeChangeChannel())\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\r\n    margin-top: 6px;\r\n    display: flex;\r\n    justify-content: center;\r\n    input{\r\n        margin-right: 4px;\r\n    }\r\n    button{\r\n        background-color: var(--secondary);\r\n        border-radius: 4px;\r\n        padding: 5px 8px;\r\n    }\r\n}",
                    "styleUrl": "./custom-counter-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n    <p>{{(channelName$ | async) }}</p><br>\n</div>\n<div class=\"container\">\n    \n    <input type=\"text\" placeholder=\"enter value\" [(ngModel)]=\"value\">\n    <button (click)=\"onAdd()\">Add</button>\n</div>\n<div class=\"container\">\n    <button (click)=\"changeText()\">Change</button>\n</div>"
        },
        {
            "name": "EditbookComponent",
            "id": "component-EditbookComponent-e93d6c9d540f09297cd9669009563602",
            "file": "src/app/books/editbook/editbook.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-editbook",
            "styleUrls": [
                "./editbook.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./editbook.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "book",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Books",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "booksForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "bookSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "show",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { Books } from 'src/app/shared/header/models/books.model';\nimport { AppState } from 'src/app/store/app.state';\nimport { updateBook } from '../state/books.actions';\nimport { getBookById } from '../state/books.selector';\n\n@Component({\n  selector: 'app-editbook',\n  templateUrl: './editbook.component.html',\n  styleUrls: ['./editbook.component.scss']\n})\nexport class EditbookComponent implements OnInit,OnDestroy {\n\n  book: Books;\n  booksForm: FormGroup;\n  bookSubscription: Subscription;\n  show: boolean = true;\n  constructor(private route:  ActivatedRoute, private store:Store<AppState>,\n    private router: Router) { }\n\n  ngOnInit(): void { \n    this.route.paramMap.subscribe((parames)=>{\n      const id = parames.get('id');\n     this.bookSubscription = this.store.select(getBookById, { id } ).subscribe((data)=>{\n        this.book = data;\n        this.createForm();\n      })\n    })   \n  }\n\n  createForm(){\n    this.booksForm = new FormGroup({\n      title: new FormControl(this.book.title,\n        [Validators.required ]),\n      description: new FormControl(this.book.description,[Validators.required])\n    })\n  }\n\n  onSubmit(){\n    console.log(\"in\");\n    if(!this.booksForm.valid){\n      return;\n    }\n    const title = this.booksForm.value.title;\n    const description = this.booksForm.value.description;\n\n    const book: Books={\n      id: this.book.id,\n      title,\n      description\n    }\n\n    this.store.dispatch(updateBook({book}))\n  }\n  ngOnDestroy(){\n    this.bookSubscription.unsubscribe();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container{\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 20px;\r\n    form{\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    button{\r\n        background-color: var(--secondary);\r\n        padding: 5px 5px 5px 5px;\r\n        border-radius: 3px;\r\n        cursor: pointer;\r\n    }\r\n    .error {\r\n        font-size: 15px;\r\n     }\r\n    \r\n     .error-msg{\r\n        color: red;\r\n        font-size: 12px;\r\n    }\r\n}",
                    "styleUrl": "./editbook.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"container\" *ngIf=\"show\"> \n    <div class=\"addForm\">\n        <form [formGroup]=\"booksForm\" (ngSubmit)=\"onSubmit()\">\n            <h3>Update Book Details</h3>\n            <div class=\"title\">\n                    <label for=\"fname\">Title</label> <br>\n                    <input type=\"text\" id=\"fname\" placeholder=\"book title\"  formControlName=\"title\">\n                    <div *ngIf=\"booksForm.controls['title'].errors && booksForm.controls['title'].touched\"\n                    class=\"error-msg\">\n                    <div class=\"error\" [hidden]=\"!booksForm.controls['title'].errors.required\">please enter book title</div>\n                    <div class=\"error\" [hidden]=\"!booksForm.controls['title'].errors.minLength\">please enter minimum 6 char</div>\n                    </div> \n                    \n            </div>\n            <div class=\"description\">\n                <label for=\"lname\">Description</label> <span class=\"mandetory\">*</span><br>\n                <textarea rows=\"4\" cols=\"30\" placeholder=\"book description here\"  formControlName=\"description\"></textarea>\n                <div *ngIf=\"booksForm.controls['description'].errors && booksForm.controls['description'].touched\"\n                class=\"error-msg\">\n                <div class=\"error\" [hidden]=\"!booksForm.controls['description'].errors.required\">please enter book Description</div>\n            </div> \n           \n            </div>\n            <div class=\"submit\">\n                <button type=\"submit\" >Update</button>\n            </div>\n        </form>\n    </div>\n</div>"
        },
        {
            "name": "ForgetPasswordComponent",
            "id": "component-ForgetPasswordComponent-464cfc8ed6def1061e52d0ba3682c631",
            "file": "src/app/auth/forget-password/forget-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forget-password",
            "styleUrls": [
                "./forget-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./forget-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss']\n})\nexport class ForgetPasswordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.container {\r\n    // background-image: url(\"../../assets/bg.jpg\");\r\n    background-image: url(\"../../../assets/bg.jpg\");\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .error {\r\n        font-size: 15px;\r\n     }\r\n    \r\n     .error-msg{\r\n        color: red;\r\n        font-size: 12px;\r\n    }\r\n    .loginContainer {\r\n        height: 150px;\r\n        width: 300px;\r\n        background: var(--background);\r\n        padding: 50px;\r\n        border-radius: 10px;\r\n        position: relative;\r\n        text-align: center;\r\n        display: flex;\r\n        flex-direction: column;\r\n        border: 2px solid black;\r\n\r\n        .newUser{\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            position: relative;\r\n            top: 10px;\r\n\r\n            span{\r\n                color: #1b556d;\r\n            }\r\n            .newuser1,.forgotpass{\r\n                cursor: pointer;\r\n            }\r\n        }\r\n\r\n        .forgotpass{\r\n            position: relative;\r\n            top: 7px;\r\n        }\r\n\r\n        button{\r\n            cursor: pointer;\r\n        }\r\n        input{\r\n            border-radius: 2px solid black;\r\n            padding: 5px 0px 5px 3px;\r\n            margin: 5px 0px 5px 0px;   \r\n        }\r\n        #nameLable{\r\n            position: relative;\r\n            right: 54px;\r\n        }\r\n        #passLable{\r\n            position: relative;\r\n            right: 51px;\r\n        }\r\n        button{\r\n            margin-top: 5px;\r\n            background-color: var(--secondary);\r\n            padding: 5px 15px 5px 15px;\r\n            border-radius: 3px;\r\n\r\n        }\r\n      }\r\n  }\r\n ",
                    "styleUrl": "./forget-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n\n\n<div class=\"container\">\n    <form>\n      <div class=\"loginContainer\">   \n          <div>\n              <p>Enter your email and we'll send you a link to reset you password</p>\n          </div> \n        <div class=\"email\">\n          <label for=\"fname\" id=\"nameLable\"></label> <br>\n          <input type=\"text\" id=\"fname\" placeholder=\"Enter your Email\" >\n          \n        </div>\n        \n        <div class=\"submit\">\n          <button type=\"submit\">Submit</button>\n        </div>\n  \n        <div class=\"newUser\">\n            <div class=\"forgotpass\">\n                <span [routerLink]=\"['/']\">Back to Login?</span>\n            </div>\n        </div>\n      </div>\n    </form>\n  </div>\n  \n  "
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cb2dd4600ac3f1599abb173cbc75d580-1",
            "file": "src/app/shared/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isAdminLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isUserLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  isUserLoggedIn: boolean = false;\n  isAdminLoggedIn: boolean = false;\n  constructor() { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem(\"usertype\") === \"user\"){\n      this.isUserLoggedIn = false;\n    }else{\n      this.isAdminLoggedIn = true;\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "  \r\n  nav {\r\n    width: auto;\r\n    background-color: rgb(81, 67, 87);;\r\n    padding-left: 30px;\r\n    padding-right: 10px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .nav-links {\r\n        list-style: none;\r\n        display: flex;\r\n      }\r\n\r\n      .nav-item a {\r\n        display: inline-block;\r\n        padding: 5px 15px;\r\n        text-decoration: none;\r\n        color: white;\r\n      }\r\n\r\n      .nav-item:hover {\r\n        background-color: white;\r\n      }\r\n\r\n      .nav-item:hover a {\r\n        color: rgb(81, 67, 87);\r\n      }\r\n      \r\n  }\r\n\r\n/* Responsive Nav Bar */\r\n@media all and (max-width: 600px) {\r\n    nav ul {\r\n        flex-direction: column;\r\n        // text-align: center;\r\n        position: relative;\r\n        left: 80px;\r\n    }\r\n    nav ul li {\r\n        text-align: center;\r\n        \r\n    }\r\n}\r\n \r\n  \r\n  ",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<nav class=\"navbar\">\n    <ul class=\"nav-links\">\n      <li class=\"nav-item\"><a [routerLink]=\"['/books']\" routerLinkActive=\"is-active\">Books</a></li> \n      <li  class=\"nav-item\"><a [routerLink]=\"['/books/addbooks']\">Add Books</a></li> \n      <li class=\"nav-item logout\"><a [routerLink]=\"['/']\">Logout</a></li>\n    </ul>\n</nav>\n<!-- <router-outlet></router-outlet> -->"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-c42994b92a8321cd8ff38f75888a4b1c",
            "file": "src/app/auth/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loginform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "users",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "newUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLoginSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginform: FormGroup;\n  users :any= [];\n  constructor(private router: Router, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.loginform = new FormGroup({\n      email: new FormControl('',[Validators.required]),\n      password: new FormControl('',[Validators.required])\n    })\n  }\n\n  onLoginSubmit(){\n    \n    let username = this.loginform.get('email')?.value\n    let password = this.loginform.get('password')?.value;\n    this.loginService.login(username,password).subscribe(\n      data=>{\n        if(data){\n          this.users = data;\n          for(let i=0; i<this.users.length; i++){\n            if(this.loginform.value.email = this.users[i][\"email\"] && this.loginform.value.password == this.users[i][\"password\"]){\n              localStorage.setItem('usertype',this.users[i]['userType']);\n              this.router.navigate(['/header']);\n            }\n          }\n        }\n      }\n    )\n    \n  }\n  newUser(){\n    this.router.navigate(['newuser']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.container {\r\n    // background-image: url(\"../../assets/bg.jpg\");\r\n    background-image: url(\"../../../assets/bg.jpg\");\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    .error {\r\n        font-size: 15px;\r\n     }\r\n    \r\n     .error-msg{\r\n        color: red;\r\n        font-size: 12px;\r\n    }\r\n    .loginContainer {\r\n        height: 150px;\r\n        width: 300px;\r\n        background: var(--background);\r\n        padding: 50px;\r\n        border-radius: 10px;\r\n        position: relative;\r\n        text-align: center;\r\n        display: flex;\r\n        flex-direction: column;\r\n        border: 2px solid black;\r\n\r\n        .newUser{\r\n            display: flex;\r\n            justify-content: space-evenly;\r\n            position: relative;\r\n            top: 10px;\r\n\r\n            span{\r\n                color: #1b556d;\r\n            }\r\n            .newuser1,.forgotpass{\r\n                cursor: pointer;\r\n            }\r\n        }\r\n\r\n\r\n        input{\r\n            border-radius: 2px solid black;\r\n            padding: 5px 0px 5px 3px;\r\n            margin: 5px 0px 5px 0px;   \r\n        }\r\n        #nameLable{\r\n            position: relative;\r\n            right: 54px;\r\n        }\r\n        #passLable{\r\n            position: relative;\r\n            right: 51px;\r\n        }\r\n        button{\r\n            margin-top: 5px;\r\n            background-color: var(--secondary);\r\n            padding: 5px 15px 5px 15px;\r\n            border-radius: 3px;\r\n\r\n        }\r\n      }\r\n  }\r\n  ",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loginService",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loginService",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n\n\n<div class=\"container\">\n  <form [formGroup]=\"loginform\" >\n    <div class=\"loginContainer\">    \n      <div class=\"email\">\n        <label for=\"fname\" id=\"nameLable\">Login ID</label> <br>\n        <input type=\"text\" id=\"fname\" placeholder=\"First name\" formControlName=\"email\" >\n        <div *ngIf=\"loginform.controls['email'].errors && loginform.controls['email'].touched\"\n                    class=\"error-msg\">\n            <div class=\"error\" [hidden]=\"!loginform.controls['email'].errors.required\">please enter email</div>\n            </div>\n      </div>\n      <div class=\"password\">\n        <label for=\"pass\" id=\"passLable\">Password </label><br>\n        <input type=\"password\" placeholder=\"enter password here\" formControlName=\"password\">\n        <div *ngIf=\"loginform.controls['password'].errors && loginform.controls['password'].touched\"\n                    class=\"error-msg\">\n            <div class=\"error\" [hidden]=\"!loginform.controls['password'].errors.required\">please enter password</div>\n            </div>\n      </div>\n      <div class=\"submit\">\n        <button type=\"submit\" [disabled]=\"!loginform.valid\" (click)=\"onLoginSubmit()\">Login</button>\n      </div>\n\n      <div class=\"newUser\">\n          <div class=\"forgotpass\">\n              <span [routerLink]=\"['/forgetPass']\">Forget Password?</span>\n          </div>\n          <div class=\"newuser1\">\n              <span (click)=\"newUser()\">new user?</span>\n          </div>\n      </div>\n    </div>\n  </form>\n</div>\n<!-- forgetPass -->\n"
        },
        {
            "name": "NavigationComponent",
            "id": "component-NavigationComponent-bd2d2b41f400516a89c6511543e2a2df",
            "file": "src/app/shared/navigation/navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navigation",
            "styleUrls": [
                "./navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./navigation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-header></app-header>\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RegisterUserComponent",
            "id": "component-RegisterUserComponent-7ea9d5653a4d323e8a753dd309eae5fe",
            "file": "src/app/newuser/register-user/register-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register-user",
            "styleUrls": [
                "./register-user.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "registrationForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "backtologin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRegister",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { UserRegister } from 'src/app/shared/header/models/register.model';\nimport { AppState } from 'src/app/store/app.state';\nimport { addUser } from '../state/newuser.actions';\n\n@Component({\n  selector: 'app-register-user',\n  templateUrl: './register-user.component.html',\n  styleUrls: ['./register-user.component.scss']\n})\nexport class RegisterUserComponent implements OnInit {\n\n  registrationForm: FormGroup\n  constructor(private router: Router,private store: Store<AppState>) { }\n\n  ngOnInit(): void {\n    this.registrationForm = new FormGroup({\n      fName: new FormControl(null,[Validators.required ]),\n        lName: new FormControl(null,[Validators.required]),\n        email: new FormControl(null,[Validators.required]),\n        password: new FormControl(null,[Validators.required]),\n        userType: new FormControl(\"Admin\"),  \n    })\n  }\n\n\n  onRegister(){\n    if(!this.registrationForm.valid){\n      return;\n    }\n    const user : UserRegister ={\n      fName: this.registrationForm.value.fName,\n      lName: this.registrationForm.value.lName,\n      email: this.registrationForm.value.email,\n      password: this.registrationForm.value.password,\n      userType: this.registrationForm.value.userType\n    };\n    this.store.dispatch(addUser({user}))\n    console.log(\"user data is\",user)\n  }\n  backtologin(){\n    this.router.navigate(['login']);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".main{\r\n    background-image: url(\"../../../assets/bg.jpg\");\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n.container{\r\n    width: 400px;\r\n    padding: 10px 0;\r\n    background: var(--background);\r\n    border: 2px solid black;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    position: relative;\r\n    .mandetory{\r\n        color: red;\r\n    }\r\n    input{\r\n        border-radius: 2px solid black;\r\n        padding: 5px 0px 5px 3px;\r\n        margin: 5px 0px 5px 0px;\r\n        \r\n    }\r\n    \r\n    ::placeholder {\r\n        color: rgb(141, 133, 133);\r\n    }\r\n    label{\r\n       color:rgb(69, 85, 96);;\r\n    }\r\n    \r\n   \r\n    .personalInfo{\r\n        display: flex;\r\n        margin: 10px 0px 10px 0px;\r\n        flex-direction: row;\r\n        .fname{\r\n            margin-right: 3px;\r\n        }    \r\n        \r\n    }\r\n\r\n    .otherinfo{\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin-bottom: 6px;\r\n        input{\r\n            min-width: 200px;\r\n        }\r\n        #userType{\r\n            padding: 5px 0px 5px 3px;\r\n            margin: 5px 0px 5px 0px;\r\n            min-width: 210px;\r\n        }\r\n        .submit{\r\n           display: flex;\r\n           \r\n           button{\r\n            margin-top: 5px;\r\n            background-color: var(--secondary);\r\n            padding: 5px 0px 5px 0px;\r\n            border-radius: 3px;\r\n            cursor: pointer;\r\n           }\r\n           .backtologin{\r\n              position: relative;\r\n              left: 5px;\r\n              cursor: pointer;\r\n           }\r\n        }\r\n     \r\n    }\r\n   \r\n}\r\n}\r\n\r\n\r\n// *{\r\n//     box-sizing: border-box;\r\n// }\r\n// a{\r\n//     text-decoration: none;\r\n//     color: #000;\r\n// }\r\n\r\n// section{\r\n//    background-image: url(\"../../../assets/bg.jpg\");\r\n//     height: 89vh;\r\n//     display: flex;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//     flex-direction: column;\r\n//     lable{\r\n//         display: block;\r\n//     }\r\n//     input{\r\n//         min-width: 100px;\r\n//         display: block;\r\n//         margin: 20px;\r\n//         font-size: 18px;\r\n//         font-weight: 400;\r\n//         border-width: 0 0 2px 0;\r\n//         border-color: #b9b9b9;\r\n//         outline: none;\r\n//         transition: border-color 0.2s;\r\n//     }\r\n\r\n//     input:focus{\r\n//         border-color: #555;\r\n//     }\r\n\r\n//     .submit-btn{\r\n//         padding: 12px 15px;\r\n//         border-width: 0;\r\n//         font-size: 18px;\r\n//         font-weight: 400;\r\n//         background-color: #ff9980;\r\n//         color: #fff;\r\n//         outline: none;\r\n//         transition: border-color 0.2s;\r\n//     }\r\n//     .submit-btn:focus{\r\n//        background-color: #d4806b\r\n//    }\r\n// }",
                    "styleUrl": "./register-user.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"main\">\n    <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onRegister()\">\n    <div class=\"container\">  \n        <!-- <div class=\"personalInfo\">\n            <div class=\"fname\">\n                <label for=\"fname\">First Name</label> <span class=\"mandetory\">*</span> <br>\n                 <input type=\"text\" id=\"fname\" placeholder=\"First name\" formControlName=\"fName\">\n            </div>\n            <div class=\"lname\">\n                <label for=\"lname\">Last Name</label> <span class=\"mandetory\">*</span><br>\n                <input type=\"text\" placeholder=\"Last name\" id=\"lname\" formControlName=\"lName\">\n            </div>\n        </div> -->\n        <div class=\"otherinfo\">\n            <div class=\"fname\">\n                <label for=\"fname\">First Name</label> <span class=\"mandetory\">*</span> <br>\n                 <input type=\"text\" id=\"fname\" placeholder=\"First name\" formControlName=\"fName\">\n            </div>\n            <div class=\"lname\">\n                <label for=\"lname\">Last Name</label> <span class=\"mandetory\">*</span><br>\n                <input type=\"text\" placeholder=\"Last name\" id=\"lname\" formControlName=\"lName\">\n            </div>\n            <div class=\"workemail\">\n                <label for=\"workemail\">Email <span class=\"mandetory\">*</span></label> <br>\n                <input type=\"email\" placeholder=\"i.e abc@gmail.com\" formControlName=\"email\">\n            </div>\n            <div class=\"password\">\n                <label for=\"pass\">Password <span class=\"mandetory\">*</span></label><br>\n                <input type=\"password\" placeholder=\"enter password here\" formControlName=\"password\">\n            </div> \n            <div class=\"userType\">\n                <label for=\"userType\">User Type <span class=\"mandetory\">*</span></label><br>\n                <select name=\"userType\" id=\"userType\" formControlName=\"userType\">\n                    <option value=\"admin\" selected>Admin</option>\n                    <option value=\"user\">User</option>\n\n                </select>\n            </div>\n            <div class=\"submit\">\n                <div class=\"submitbtn\" type=\"submit\"><button>Register</button></div>\n                <div class=\"backtologin\" (click)=\"backtologin()\"><button >Back to Login</button></div>\n                \n            </div>\n        </div>\n        \n    </div>\n</form>\n</div>\n\n\n<!-- <section>\n    <h1>\n      Register User\n    </h1>\n    <form action=\"\">\n        <label for=\"fname\">First Name</label> <span class=\"mandetory\">*</span> <br>\n        <input type=\"text\" id=\"fname\" placeholder=\"First name\" formControlName=\"fName\">\n        <input type=\"text\" placeholder=\"Last name\" id=\"lname\" formControlName=\"lName\">\n        <input type=\"email\" placeholder=\"enter email\" formControlName=\"email\">\n        <input type=\"password\" placeholder=\"enter password here\" formControlName=\"password\">\n\n      <input type=\"submit\" name=\"loginBtn\" value=\"login\" class=\"submit-btn\">\n      <p>New user <a href=\"\">signup</a></p>\n    </form>\n  </section> -->"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-705b951c3ee144c38da0501e3a652e2c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { environment } from '../environments/environment';\nimport { StoreModule } from '@ngrx/store';\nimport { appReducer } from './store/app.state';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './auth/login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NavigationComponent } from './shared/navigation/navigation.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent, \n    HeaderComponent, NavigationComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot({}),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "NavigationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-f434a188edec219f5be912796a071df8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForgetPasswordComponent } from './auth/forget-password/forget-password.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { NavigationComponent } from './shared/navigation/navigation.component';\n\nconst routes: Routes = [\n  { \n    path:'', component:LoginComponent\n  },\n  {\n    path:\"login\", component:LoginComponent\n  },\n  {\n    path:'header',\n    component:HeaderComponent, \n  },\n \n  {\n    path:'forgetPass',\n    component:ForgetPasswordComponent\n  },\n  {\n    path:\"navigation\",\n    component:NavigationComponent,\n    // children:[\n    //   { \n    //     path: '', redirectTo: 'book', pathMatch: 'full'\n    //   },\n    //   {\n    //     path: 'books/book',\n    //     component: BooksComponent,\n    //   },\n    //   {\n    //     path:'addbooks',\n    //     component:AddbooksComponent\n    //   },\n      \n    // ]\n  },\n  {\n    path: 'counter',\n    loadChildren: () =>\n      \"import('./counter/counter.module').then((m) => m.CounterModule)\",\n  },\n  {\n    path: 'newuser',\n    loadChildren: () =>\n      \"import('./newuser/newuser.module').then((m) => m.NewuserModule)\",\n  },\n  {\n    path:'books',\n    loadChildren:()=>\n    \"import('./books/books.module').then((m)=>m.BooksModule)\"\n  },\n  {\n    path:'auth',\n    loadChildren:()=>\n    \"import('./auth/auth.module').then((m)=>m.AuthModule)\"\n  }\n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-44d959c90c2bfe89ef46dfb56739ebe0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children:[\n      { \n        path:'',\n        redirectTo:'login'\n      },\n      {\n        path:'login',\n        component:LoginComponent\n      }\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [\n    ForgetPasswordComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n  ]\n})\nexport class AuthModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ForgetPasswordComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BooksModule",
            "id": "module-BooksModule-5a15bd97c9173b4d77de6c1cb2546297",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/books/books.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BooksComponent } from './books/books.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddbooksComponent } from './addbooks/addbooks.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditbookComponent } from './editbook/editbook.component';\nimport { StoreModule } from '@ngrx/store';\nimport { booksReducer } from './state/books.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { BooksEffects } from './state/books.effects';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BooksComponent,\n    children:[\n      {\n        path:'edit/:id',\n        component:EditbookComponent\n      }\n    ]\n  },\n  {\n    path: 'book',\n    component: BooksComponent,\n  },\n  {\n    path:'addbooks',\n    component:AddbooksComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    BooksComponent,\n    AddbooksComponent,\n    EditbookComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature('books',booksReducer),\n    // EffectsModule.forFeature([booksEffects]),\n    ReactiveFormsModule,\n    FormsModule,\n    EffectsModule.forRoot([BooksEffects])\n  ],\n  \n})\nexport class BooksModule { }\n\n\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddbooksComponent"
                        },
                        {
                            "name": "BooksComponent"
                        },
                        {
                            "name": "EditbookComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CounterModule",
            "id": "module-CounterModule-c90097ed20ff26c43fcc9b2dfa8a0ac4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/counter/counter.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CounterComponent } from './counter/counter.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CounterOutputComponent } from './counter-output/counter-output.component';\nimport { CounterButtonsComponent } from './counter-buttons/counter-buttons.component';\nimport { StoreModule } from '@ngrx/store';\nimport { counterReducer } from './state/counter.reducer';\nimport { CustomCounterInputComponent } from './custom-counter-input/custom-counter-input.component';\nimport { FormsModule } from '@angular/forms';\nimport { COUNTER_STATE_NAME } from './state/counter.selectors';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from 'src/environments/environment';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CounterComponent,\n  },\n];\n\n@NgModule({\n  declarations: [\n    CounterComponent,\n    CounterOutputComponent,\n    CounterButtonsComponent,\n    CustomCounterInputComponent,\n\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    StoreModule.forFeature(COUNTER_STATE_NAME, counterReducer),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n  ]\n})\nexport class CounterModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CounterButtonsComponent"
                        },
                        {
                            "name": "CounterComponent"
                        },
                        {
                            "name": "CounterOutputComponent"
                        },
                        {
                            "name": "CustomCounterInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewuserModule",
            "id": "module-NewuserModule-a0a480dcd9d3daf4bcc9a9bf4f391248",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/newuser/newuser.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegisterUserComponent } from './register-user/register-user.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NewUserEffects } from './state/newuser.effects';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterUserComponent,\n  },\n];\n\n@NgModule({\n  declarations: [\n    RegisterUserComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    FormsModule,\n    EffectsModule.forRoot([NewUserEffects])\n  ]\n})\nexport class NewuserModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RegisterUserComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_booksReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(initialState, on(addBooksSuccess, (state, action)=>{\r\n    let book = {...action.book};\r\n    \r\n    return{\r\n        ...state,\r\n        books:[...state.books,book]\r\n    }\r\n}),\r\non(updateBookSuccess, (state,action)=>{\r\n    const updatedbook = state.books.map((book)=>{\r\n        return action.book.id === book.id ? action.book: book;\r\n    })\r\n    return{\r\n        ...state,\r\n        books: updatedbook\r\n    }\r\n}),\r\non(deleteBookSucces, (state,{id})=>{\r\n    const  updatedbook = state.books.filter(book=>{\r\n        return book.id!==id\r\n    })\r\n    return{\r\n        ...state,   \r\n        books: updatedbook\r\n    }\r\n}),\r\non(loadBookSuccess, (state, action)=>{\r\n    return{\r\n        ...state,\r\n        books: action.books\r\n    }\r\n})\r\n)"
            },
            {
                "name": "_counterReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(initialState, on(increment, (state)=>{\r\n    return{\r\n        ...state,\r\n        counter: state.counter + 1\r\n    }\r\n}),\r\non(decrement, (state)=>{\r\n    return{\r\n        ...state,\r\n        counter: state.counter - 1\r\n    }\r\n}),\r\non(reset, (state)=>{\r\n    return{\r\n        ...state,\r\n        counter: 0\r\n    }\r\n}),\r\non(customIncrement, (state,action)=>{\r\n    console.log(action);\r\n    return{\r\n        ...state,\r\n        counter: state.counter + action.value,\r\n    }\r\n}),\r\non(onchangeChangeChannel,(state)=>{\r\n    return{\r\n        ...state,\r\n        channelName:'Production Channel'\r\n    }\r\n})\r\n)"
            },
            {
                "name": "_userReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/newuser/state/newuser.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(initialState, on(addUserSuccess, (state, action)=>{\r\n    let book = {...action.user};\r\n    \r\n    return{\r\n        ...state,\r\n        books:[...state.user,book]\r\n    }\r\n}))"
            },
            {
                "name": "ADD_Book_ACTION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[ book page ] add book'"
            },
            {
                "name": "ADD_BOOKS_SUCCESS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[book page] add book success'"
            },
            {
                "name": "ADD_USER_ACTION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/newuser/state/newuser.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[ user page ] add user'"
            },
            {
                "name": "ADD_USER_SUCCESS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/newuser/state/newuser.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[book page] add user success'"
            },
            {
                "name": "addbooks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ADD_Book_ACTION, props<{ book: Books}>())"
            },
            {
                "name": "addBooksSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ADD_BOOKS_SUCCESS, props<{ book: Books}>())"
            },
            {
                "name": "addUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/newuser/state/newuser.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ADD_USER_ACTION, props<{ user: UserRegister}>())"
            },
            {
                "name": "addUserSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/newuser/state/newuser.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ADD_USER_SUCCESS, props<{ user: UserRegister}>())"
            },
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    counter: counterReducer,\r\n    books: booksReducer,\r\n    user: UserReducer\r\n}"
            },
            {
                "name": "BOOK_STATE_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'books'"
            },
            {
                "name": "COUNTER_STATE_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'counter'"
            },
            {
                "name": "customIncrement",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\"customIncrement\", props<{value:number}>())"
            },
            {
                "name": "decrement",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('decrement')"
            },
            {
                "name": "DELETE_BOOK_ACTION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[ book page] delete book'"
            },
            {
                "name": "DELETE_BOOK_SUCCESS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[ book page] delete book success'"
            },
            {
                "name": "deleteBook",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(DELETE_BOOK_ACTION, props<{ id: any}>())"
            },
            {
                "name": "deleteBookSucces",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(DELETE_BOOK_SUCCESS, props<{ id: string}>())"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "getBookById",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(getBooksState, (state , props)=>{\r\n   return state.books.find( (book)=> book.id === props.id );\r\n})"
            },
            {
                "name": "getBooks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(getBooksState, (state)=>{\r\n    return state.books;\r\n})"
            },
            {
                "name": "getBooksState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<BooksState>('books')"
            },
            {
                "name": "getChannel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(getCounterState, (state)=>{\r\n    return state.channelName;\r\n})"
            },
            {
                "name": "getCounter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(getCounterState, (state)=>{\r\n    return state.counter;\r\n})"
            },
            {
                "name": "getCounterState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<CounterState>(COUNTER_STATE_NAME)"
            },
            {
                "name": "increment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('increment')"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "BooksState",
                "defaultValue": "{\r\n    books: [],\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CounterState",
                "defaultValue": "{\r\n    counter: 4,\r\n    channelName:'Test Channel'\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/newuser/state/newuser.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "UserState",
                "defaultValue": "{\r\n    user: [],\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LOAD_BOOK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[ book page ] load book'"
            },
            {
                "name": "LOAD_BOOK_SUCCESS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[ book page ] load books success'"
            },
            {
                "name": "loadBooks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(LOAD_BOOK)"
            },
            {
                "name": "loadBookSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(LOAD_BOOK_SUCCESS, props<{ books: Books[]}>())"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "onchangeChangeChannel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('onchangeChangeChannel')"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "reset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/counter/state/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('reset')"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "UPDATE_BOOK_ACTION",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[ book page] update book'"
            },
            {
                "name": "UPDATE_BOOK_SUCCESS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[ book page] update book success'"
            },
            {
                "name": "updateBook",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(UPDATE_BOOK_ACTION,\r\n    props<{ book: Books}>())"
            },
            {
                "name": "updateBookSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/books/state/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(UPDATE_BOOK_SUCCESS,  props<{ book: Books}>())"
            }
        ],
        "functions": [
            {
                "name": "booksReducer",
                "file": "src/app/books/state/books.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "counterReducer",
                "file": "src/app/counter/state/counter.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "UserReducer",
                "file": "src/app/newuser/state/newuser.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/books/state/books.reducer.ts": [
                {
                    "name": "_booksReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(initialState, on(addBooksSuccess, (state, action)=>{\r\n    let book = {...action.book};\r\n    \r\n    return{\r\n        ...state,\r\n        books:[...state.books,book]\r\n    }\r\n}),\r\non(updateBookSuccess, (state,action)=>{\r\n    const updatedbook = state.books.map((book)=>{\r\n        return action.book.id === book.id ? action.book: book;\r\n    })\r\n    return{\r\n        ...state,\r\n        books: updatedbook\r\n    }\r\n}),\r\non(deleteBookSucces, (state,{id})=>{\r\n    const  updatedbook = state.books.filter(book=>{\r\n        return book.id!==id\r\n    })\r\n    return{\r\n        ...state,   \r\n        books: updatedbook\r\n    }\r\n}),\r\non(loadBookSuccess, (state, action)=>{\r\n    return{\r\n        ...state,\r\n        books: action.books\r\n    }\r\n})\r\n)"
                }
            ],
            "src/app/counter/state/counter.reducer.ts": [
                {
                    "name": "_counterReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(initialState, on(increment, (state)=>{\r\n    return{\r\n        ...state,\r\n        counter: state.counter + 1\r\n    }\r\n}),\r\non(decrement, (state)=>{\r\n    return{\r\n        ...state,\r\n        counter: state.counter - 1\r\n    }\r\n}),\r\non(reset, (state)=>{\r\n    return{\r\n        ...state,\r\n        counter: 0\r\n    }\r\n}),\r\non(customIncrement, (state,action)=>{\r\n    console.log(action);\r\n    return{\r\n        ...state,\r\n        counter: state.counter + action.value,\r\n    }\r\n}),\r\non(onchangeChangeChannel,(state)=>{\r\n    return{\r\n        ...state,\r\n        channelName:'Production Channel'\r\n    }\r\n})\r\n)"
                }
            ],
            "src/app/newuser/state/newuser.reducer.ts": [
                {
                    "name": "_userReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/newuser/state/newuser.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(initialState, on(addUserSuccess, (state, action)=>{\r\n    let book = {...action.user};\r\n    \r\n    return{\r\n        ...state,\r\n        books:[...state.user,book]\r\n    }\r\n}))"
                }
            ],
            "src/app/books/state/books.actions.ts": [
                {
                    "name": "ADD_Book_ACTION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[ book page ] add book'"
                },
                {
                    "name": "ADD_BOOKS_SUCCESS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[book page] add book success'"
                },
                {
                    "name": "addbooks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ADD_Book_ACTION, props<{ book: Books}>())"
                },
                {
                    "name": "addBooksSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ADD_BOOKS_SUCCESS, props<{ book: Books}>())"
                },
                {
                    "name": "DELETE_BOOK_ACTION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[ book page] delete book'"
                },
                {
                    "name": "DELETE_BOOK_SUCCESS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[ book page] delete book success'"
                },
                {
                    "name": "deleteBook",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(DELETE_BOOK_ACTION, props<{ id: any}>())"
                },
                {
                    "name": "deleteBookSucces",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(DELETE_BOOK_SUCCESS, props<{ id: string}>())"
                },
                {
                    "name": "LOAD_BOOK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[ book page ] load book'"
                },
                {
                    "name": "LOAD_BOOK_SUCCESS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[ book page ] load books success'"
                },
                {
                    "name": "loadBooks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(LOAD_BOOK)"
                },
                {
                    "name": "loadBookSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(LOAD_BOOK_SUCCESS, props<{ books: Books[]}>())"
                },
                {
                    "name": "UPDATE_BOOK_ACTION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[ book page] update book'"
                },
                {
                    "name": "UPDATE_BOOK_SUCCESS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[ book page] update book success'"
                },
                {
                    "name": "updateBook",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(UPDATE_BOOK_ACTION,\r\n    props<{ book: Books}>())"
                },
                {
                    "name": "updateBookSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(UPDATE_BOOK_SUCCESS,  props<{ book: Books}>())"
                }
            ],
            "src/app/newuser/state/newuser.actions.ts": [
                {
                    "name": "ADD_USER_ACTION",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/newuser/state/newuser.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[ user page ] add user'"
                },
                {
                    "name": "ADD_USER_SUCCESS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/newuser/state/newuser.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[book page] add user success'"
                },
                {
                    "name": "addUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/newuser/state/newuser.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ADD_USER_ACTION, props<{ user: UserRegister}>())"
                },
                {
                    "name": "addUserSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/newuser/state/newuser.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ADD_USER_SUCCESS, props<{ user: UserRegister}>())"
                }
            ],
            "src/app/store/app.state.ts": [
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    counter: counterReducer,\r\n    books: booksReducer,\r\n    user: UserReducer\r\n}"
                }
            ],
            "src/app/books/state/books.selector.ts": [
                {
                    "name": "BOOK_STATE_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'books'"
                },
                {
                    "name": "getBookById",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(getBooksState, (state , props)=>{\r\n   return state.books.find( (book)=> book.id === props.id );\r\n})"
                },
                {
                    "name": "getBooks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(getBooksState, (state)=>{\r\n    return state.books;\r\n})"
                },
                {
                    "name": "getBooksState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<BooksState>('books')"
                }
            ],
            "src/app/counter/state/counter.selectors.ts": [
                {
                    "name": "COUNTER_STATE_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'counter'"
                },
                {
                    "name": "getChannel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(getCounterState, (state)=>{\r\n    return state.channelName;\r\n})"
                },
                {
                    "name": "getCounter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(getCounterState, (state)=>{\r\n    return state.counter;\r\n})"
                },
                {
                    "name": "getCounterState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<CounterState>(COUNTER_STATE_NAME)"
                }
            ],
            "src/app/counter/state/counter.actions.ts": [
                {
                    "name": "customIncrement",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\"customIncrement\", props<{value:number}>())"
                },
                {
                    "name": "decrement",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('decrement')"
                },
                {
                    "name": "increment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('increment')"
                },
                {
                    "name": "onchangeChangeChannel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('onchangeChangeChannel')"
                },
                {
                    "name": "reset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('reset')"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/app/books/state/books.state.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/books/state/books.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BooksState",
                    "defaultValue": "{\r\n    books: [],\r\n}"
                }
            ],
            "src/app/counter/state/counter.state.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/counter/state/counter.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CounterState",
                    "defaultValue": "{\r\n    counter: 4,\r\n    channelName:'Test Channel'\r\n}"
                }
            ],
            "src/app/newuser/state/newuser.state.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/newuser/state/newuser.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserState",
                    "defaultValue": "{\r\n    user: [],\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/books/state/books.reducer.ts": [
                {
                    "name": "booksReducer",
                    "file": "src/app/books/state/books.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/counter/state/counter.reducer.ts": [
                {
                    "name": "counterReducer",
                    "file": "src/app/counter/state/counter.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/newuser/state/newuser.reducer.ts": [
                {
                    "name": "UserReducer",
                    "file": "src/app/newuser/state/newuser.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "header",
                        "component": "HeaderComponent"
                    },
                    {
                        "path": "forgetPass",
                        "component": "ForgetPasswordComponent"
                    },
                    {
                        "path": "navigation",
                        "component": "NavigationComponent"
                    },
                    {
                        "path": "counter",
                        "loadChildren": "./counter/counter.module#CounterModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/counter/counter.module.ts",
                                        "module": "CounterModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "CounterComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "CounterModule"
                            }
                        ]
                    },
                    {
                        "path": "newuser",
                        "loadChildren": "./newuser/newuser.module#NewuserModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/newuser/newuser.module.ts",
                                        "module": "NewuserModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "RegisterUserComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "NewuserModule"
                            }
                        ]
                    },
                    {
                        "path": "books",
                        "loadChildren": "./books/books.module#BooksModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/books/books.module.ts",
                                        "module": "BooksModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "BooksComponent",
                                                "children": [
                                                    {
                                                        "path": "edit/:id",
                                                        "component": "EditbookComponent"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "book",
                                                "component": "BooksComponent"
                                            },
                                            {
                                                "path": "addbooks",
                                                "component": "AddbooksComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "BooksModule"
                            }
                        ]
                    },
                    {
                        "path": "auth",
                        "loadChildren": "./auth/auth.module#AuthModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/auth/auth.module.ts",
                                        "module": "AuthModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "redirectTo": "login"
                                                    },
                                                    {
                                                        "path": "login",
                                                        "component": "LoginComponent"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/forget-password/forget-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForgetPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/books/addbooks/addbooks.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddbooksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/books/books/books.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BooksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/books/editbook/editbook.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditbookComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADD_Book_ACTION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADD_BOOKS_SUCCESS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addbooks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addBooksSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DELETE_BOOK_ACTION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DELETE_BOOK_SUCCESS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteBook",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteBookSucces",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOAD_BOOK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LOAD_BOOK_SUCCESS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadBooks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadBookSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UPDATE_BOOK_ACTION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UPDATE_BOOK_SUCCESS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateBook",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateBookSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BooksEffects",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "booksReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_booksReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BOOK_STATE_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getBookById",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getBooks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getBooksState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BooksState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/books/state/books.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/counter-buttons/counter-buttons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CounterButtonsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/counter-output/counter-output.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CounterOutputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/counter/counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/custom-counter-input/custom-counter-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomCounterInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customIncrement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "decrement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "increment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "onchangeChangeChannel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "counterReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_counterReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COUNTER_STATE_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getChannel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCounter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getCounterState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CounterState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/counter/state/counter.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/register-user/register-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADD_USER_ACTION",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADD_USER_SUCCESS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addUserSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NewUserEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "UserReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_userReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/newuser/state/newuser.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/books.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BooksService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/login.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/register-user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RegisterUserService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/models/books.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Books",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/models/register.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserRegister",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/navigation/navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/stories/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}